<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dlm.fmp.mapper.CmContentFinalMapper">
  <resultMap id="BaseResultMap" type="com.dlm.fmp.pojo.CmContentFinal">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="cm_content_id" jdbcType="INTEGER" property="cmContentId" />
    <result column="member_rel" jdbcType="VARCHAR" property="memberRel" />
    <result column="father_name" jdbcType="VARCHAR" property="fatherName" />
    <result column="spouse_name" jdbcType="VARCHAR" property="spouseName" />
    <result column="father_name_pinyin" jdbcType="VARCHAR" property="fatherNamePinyin" />
    <result column="spouse_name_pinyin" jdbcType="VARCHAR" property="spouseNamePinyin" />
    <result column="rel_keyword" jdbcType="VARCHAR" property="relKeyword" />
    <result column="member_surname" jdbcType="VARCHAR" property="memberSurname" />
    <result column="member_name" jdbcType="VARCHAR" property="memberName" />
    <result column="member_name_pinyin" jdbcType="VARCHAR" property="memberNamePinyin" />
    <result column="member_gender" jdbcType="INTEGER" property="memberGender" />
    <result column="member_detail" jdbcType="VARCHAR" property="memberDetail" />
    <result column="content_type" jdbcType="INTEGER" property="contentType" />
    <result column="generation_num" jdbcType="INTEGER" property="generationNum" />
    <result column="order_no" jdbcType="INTEGER" property="orderNo" />
    <result column="sub_clan_id" jdbcType="INTEGER" property="subClanId" />
    <result column="book_id" jdbcType="INTEGER" property="bookId" />
    <result column="volume_id" jdbcType="INTEGER" property="volumeId" />
    <result column="sec_personal_name" jdbcType="VARCHAR" property="secPersonalName" />
    <result column="generation_word" jdbcType="VARCHAR" property="generationWord" />
    <result column="birthday_time" jdbcType="VARCHAR" property="birthdayTime" />
    <result column="deathday_time" jdbcType="VARCHAR" property="deathdayTime" />
    <result column="buried_location" jdbcType="VARCHAR" property="buriedLocation" />
    <result column="son" jdbcType="VARCHAR" property="son" />
    <result column="daughter" jdbcType="VARCHAR" property="daughter" />
    <result column="ranking" jdbcType="INTEGER" property="ranking" />
    <result column="extend_flag" jdbcType="INTEGER" property="extendFlag" />
    <result column="rel_flag" jdbcType="INTEGER" property="relFlag" />
    <result column="parse_flag" jdbcType="INTEGER" property="parseFlag" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="to_locate" jdbcType="INTEGER" property="toLocate" />
    <result column="son_num" jdbcType="INTEGER" property="sonNum" />
    <result column="son_num_real" jdbcType="INTEGER" property="sonNumReal" />
    <result column="mark" jdbcType="VARCHAR" property="mark" />
    <result column="rel_error_flag" jdbcType="INTEGER" property="relErrorFlag" />
    <result column="son_num_diff" jdbcType="INTEGER" property="sonNumDiff" />
    <result column="already_exist" jdbcType="INTEGER" property="alreadyExist" />
    <result column="brother_num" jdbcType="INTEGER" property="brotherNum" />
    <result column="wife_list" jdbcType="VARCHAR" property="wifeList" />
    <result column="connect_type" jdbcType="INTEGER" property="connectType" />
    <result column="sub_clan_id_origin" jdbcType="INTEGER" property="subClanIdOrigin" />
    <result column="display_flag" jdbcType="INTEGER" property="displayFlag" />
    <result column="member_rel_original" jdbcType="VARCHAR" property="memberRelOriginal" />
    <result column="member_name_original" jdbcType="VARCHAR" property="memberNameOriginal" />
    <result column="member_detail_original" jdbcType="VARCHAR" property="memberDetailOriginal" />
    <result column="member_rel_new" jdbcType="VARCHAR" property="memberRelNew" />
    <result column="member_name_new" jdbcType="VARCHAR" property="memberNameNew" />
    <result column="member_detail_new" jdbcType="VARCHAR" property="memberDetailNew" />
    <result column="comments" jdbcType="VARCHAR" property="comments" />
    <result column="print_error" jdbcType="VARCHAR" property="printError" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, cm_content_id, member_rel, father_name, spouse_name, father_name_pinyin, spouse_name_pinyin, 
    rel_keyword, member_surname, member_name, member_name_pinyin, member_gender, member_detail, 
    content_type, generation_num, order_no, sub_clan_id, book_id, volume_id, sec_personal_name, 
    generation_word, birthday_time, deathday_time, buried_location, son, daughter, ranking, 
    extend_flag, rel_flag, parse_flag, status, create_time, update_time, to_locate, son_num, 
    son_num_real, mark, rel_error_flag, son_num_diff, already_exist, brother_num, wife_list, 
    connect_type, sub_clan_id_origin, display_flag, member_rel_original, member_name_original, 
    member_detail_original, member_rel_new, member_name_new, member_detail_new, comments, 
    print_error
  </sql>
  <select id="selectByExample" parameterType="com.dlm.fmp.pojo.CmContentFinalExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from cm_content_final
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cm_content_final
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cm_content_final
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dlm.fmp.pojo.CmContentFinalExample">
    delete from cm_content_final
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dlm.fmp.pojo.CmContentFinal">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cm_content_final (cm_content_id, member_rel, father_name, 
      spouse_name, father_name_pinyin, spouse_name_pinyin, 
      rel_keyword, member_surname, member_name, 
      member_name_pinyin, member_gender, member_detail, 
      content_type, generation_num, order_no, 
      sub_clan_id, book_id, volume_id, 
      sec_personal_name, generation_word, birthday_time, 
      deathday_time, buried_location, son, 
      daughter, ranking, extend_flag, 
      rel_flag, parse_flag, status, 
      create_time, update_time, to_locate, 
      son_num, son_num_real, mark, 
      rel_error_flag, son_num_diff, already_exist, 
      brother_num, wife_list, connect_type, 
      sub_clan_id_origin, display_flag, member_rel_original, 
      member_name_original, member_detail_original, 
      member_rel_new, member_name_new, member_detail_new, 
      comments, print_error)
    values (#{cmContentId,jdbcType=INTEGER}, #{memberRel,jdbcType=VARCHAR}, #{fatherName,jdbcType=VARCHAR}, 
      #{spouseName,jdbcType=VARCHAR}, #{fatherNamePinyin,jdbcType=VARCHAR}, #{spouseNamePinyin,jdbcType=VARCHAR}, 
      #{relKeyword,jdbcType=VARCHAR}, #{memberSurname,jdbcType=VARCHAR}, #{memberName,jdbcType=VARCHAR}, 
      #{memberNamePinyin,jdbcType=VARCHAR}, #{memberGender,jdbcType=INTEGER}, #{memberDetail,jdbcType=VARCHAR}, 
      #{contentType,jdbcType=INTEGER}, #{generationNum,jdbcType=INTEGER}, #{orderNo,jdbcType=INTEGER}, 
      #{subClanId,jdbcType=INTEGER}, #{bookId,jdbcType=INTEGER}, #{volumeId,jdbcType=INTEGER}, 
      #{secPersonalName,jdbcType=VARCHAR}, #{generationWord,jdbcType=VARCHAR}, #{birthdayTime,jdbcType=VARCHAR}, 
      #{deathdayTime,jdbcType=VARCHAR}, #{buriedLocation,jdbcType=VARCHAR}, #{son,jdbcType=VARCHAR}, 
      #{daughter,jdbcType=VARCHAR}, #{ranking,jdbcType=INTEGER}, #{extendFlag,jdbcType=INTEGER}, 
      #{relFlag,jdbcType=INTEGER}, #{parseFlag,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{toLocate,jdbcType=INTEGER}, 
      #{sonNum,jdbcType=INTEGER}, #{sonNumReal,jdbcType=INTEGER}, #{mark,jdbcType=VARCHAR}, 
      #{relErrorFlag,jdbcType=INTEGER}, #{sonNumDiff,jdbcType=INTEGER}, #{alreadyExist,jdbcType=INTEGER}, 
      #{brotherNum,jdbcType=INTEGER}, #{wifeList,jdbcType=VARCHAR}, #{connectType,jdbcType=INTEGER}, 
      #{subClanIdOrigin,jdbcType=INTEGER}, #{displayFlag,jdbcType=INTEGER}, #{memberRelOriginal,jdbcType=VARCHAR}, 
      #{memberNameOriginal,jdbcType=VARCHAR}, #{memberDetailOriginal,jdbcType=VARCHAR}, 
      #{memberRelNew,jdbcType=VARCHAR}, #{memberNameNew,jdbcType=VARCHAR}, #{memberDetailNew,jdbcType=VARCHAR}, 
      #{comments,jdbcType=VARCHAR}, #{printError,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.dlm.fmp.pojo.CmContentFinal">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cm_content_final
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cmContentId != null">
        cm_content_id,
      </if>
      <if test="memberRel != null">
        member_rel,
      </if>
      <if test="fatherName != null">
        father_name,
      </if>
      <if test="spouseName != null">
        spouse_name,
      </if>
      <if test="fatherNamePinyin != null">
        father_name_pinyin,
      </if>
      <if test="spouseNamePinyin != null">
        spouse_name_pinyin,
      </if>
      <if test="relKeyword != null">
        rel_keyword,
      </if>
      <if test="memberSurname != null">
        member_surname,
      </if>
      <if test="memberName != null">
        member_name,
      </if>
      <if test="memberNamePinyin != null">
        member_name_pinyin,
      </if>
      <if test="memberGender != null">
        member_gender,
      </if>
      <if test="memberDetail != null">
        member_detail,
      </if>
      <if test="contentType != null">
        content_type,
      </if>
      <if test="generationNum != null">
        generation_num,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="subClanId != null">
        sub_clan_id,
      </if>
      <if test="bookId != null">
        book_id,
      </if>
      <if test="volumeId != null">
        volume_id,
      </if>
      <if test="secPersonalName != null">
        sec_personal_name,
      </if>
      <if test="generationWord != null">
        generation_word,
      </if>
      <if test="birthdayTime != null">
        birthday_time,
      </if>
      <if test="deathdayTime != null">
        deathday_time,
      </if>
      <if test="buriedLocation != null">
        buried_location,
      </if>
      <if test="son != null">
        son,
      </if>
      <if test="daughter != null">
        daughter,
      </if>
      <if test="ranking != null">
        ranking,
      </if>
      <if test="extendFlag != null">
        extend_flag,
      </if>
      <if test="relFlag != null">
        rel_flag,
      </if>
      <if test="parseFlag != null">
        parse_flag,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="toLocate != null">
        to_locate,
      </if>
      <if test="sonNum != null">
        son_num,
      </if>
      <if test="sonNumReal != null">
        son_num_real,
      </if>
      <if test="mark != null">
        mark,
      </if>
      <if test="relErrorFlag != null">
        rel_error_flag,
      </if>
      <if test="sonNumDiff != null">
        son_num_diff,
      </if>
      <if test="alreadyExist != null">
        already_exist,
      </if>
      <if test="brotherNum != null">
        brother_num,
      </if>
      <if test="wifeList != null">
        wife_list,
      </if>
      <if test="connectType != null">
        connect_type,
      </if>
      <if test="subClanIdOrigin != null">
        sub_clan_id_origin,
      </if>
      <if test="displayFlag != null">
        display_flag,
      </if>
      <if test="memberRelOriginal != null">
        member_rel_original,
      </if>
      <if test="memberNameOriginal != null">
        member_name_original,
      </if>
      <if test="memberDetailOriginal != null">
        member_detail_original,
      </if>
      <if test="memberRelNew != null">
        member_rel_new,
      </if>
      <if test="memberNameNew != null">
        member_name_new,
      </if>
      <if test="memberDetailNew != null">
        member_detail_new,
      </if>
      <if test="comments != null">
        comments,
      </if>
      <if test="printError != null">
        print_error,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cmContentId != null">
        #{cmContentId,jdbcType=INTEGER},
      </if>
      <if test="memberRel != null">
        #{memberRel,jdbcType=VARCHAR},
      </if>
      <if test="fatherName != null">
        #{fatherName,jdbcType=VARCHAR},
      </if>
      <if test="spouseName != null">
        #{spouseName,jdbcType=VARCHAR},
      </if>
      <if test="fatherNamePinyin != null">
        #{fatherNamePinyin,jdbcType=VARCHAR},
      </if>
      <if test="spouseNamePinyin != null">
        #{spouseNamePinyin,jdbcType=VARCHAR},
      </if>
      <if test="relKeyword != null">
        #{relKeyword,jdbcType=VARCHAR},
      </if>
      <if test="memberSurname != null">
        #{memberSurname,jdbcType=VARCHAR},
      </if>
      <if test="memberName != null">
        #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="memberNamePinyin != null">
        #{memberNamePinyin,jdbcType=VARCHAR},
      </if>
      <if test="memberGender != null">
        #{memberGender,jdbcType=INTEGER},
      </if>
      <if test="memberDetail != null">
        #{memberDetail,jdbcType=VARCHAR},
      </if>
      <if test="contentType != null">
        #{contentType,jdbcType=INTEGER},
      </if>
      <if test="generationNum != null">
        #{generationNum,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=INTEGER},
      </if>
      <if test="subClanId != null">
        #{subClanId,jdbcType=INTEGER},
      </if>
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="volumeId != null">
        #{volumeId,jdbcType=INTEGER},
      </if>
      <if test="secPersonalName != null">
        #{secPersonalName,jdbcType=VARCHAR},
      </if>
      <if test="generationWord != null">
        #{generationWord,jdbcType=VARCHAR},
      </if>
      <if test="birthdayTime != null">
        #{birthdayTime,jdbcType=VARCHAR},
      </if>
      <if test="deathdayTime != null">
        #{deathdayTime,jdbcType=VARCHAR},
      </if>
      <if test="buriedLocation != null">
        #{buriedLocation,jdbcType=VARCHAR},
      </if>
      <if test="son != null">
        #{son,jdbcType=VARCHAR},
      </if>
      <if test="daughter != null">
        #{daughter,jdbcType=VARCHAR},
      </if>
      <if test="ranking != null">
        #{ranking,jdbcType=INTEGER},
      </if>
      <if test="extendFlag != null">
        #{extendFlag,jdbcType=INTEGER},
      </if>
      <if test="relFlag != null">
        #{relFlag,jdbcType=INTEGER},
      </if>
      <if test="parseFlag != null">
        #{parseFlag,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="toLocate != null">
        #{toLocate,jdbcType=INTEGER},
      </if>
      <if test="sonNum != null">
        #{sonNum,jdbcType=INTEGER},
      </if>
      <if test="sonNumReal != null">
        #{sonNumReal,jdbcType=INTEGER},
      </if>
      <if test="mark != null">
        #{mark,jdbcType=VARCHAR},
      </if>
      <if test="relErrorFlag != null">
        #{relErrorFlag,jdbcType=INTEGER},
      </if>
      <if test="sonNumDiff != null">
        #{sonNumDiff,jdbcType=INTEGER},
      </if>
      <if test="alreadyExist != null">
        #{alreadyExist,jdbcType=INTEGER},
      </if>
      <if test="brotherNum != null">
        #{brotherNum,jdbcType=INTEGER},
      </if>
      <if test="wifeList != null">
        #{wifeList,jdbcType=VARCHAR},
      </if>
      <if test="connectType != null">
        #{connectType,jdbcType=INTEGER},
      </if>
      <if test="subClanIdOrigin != null">
        #{subClanIdOrigin,jdbcType=INTEGER},
      </if>
      <if test="displayFlag != null">
        #{displayFlag,jdbcType=INTEGER},
      </if>
      <if test="memberRelOriginal != null">
        #{memberRelOriginal,jdbcType=VARCHAR},
      </if>
      <if test="memberNameOriginal != null">
        #{memberNameOriginal,jdbcType=VARCHAR},
      </if>
      <if test="memberDetailOriginal != null">
        #{memberDetailOriginal,jdbcType=VARCHAR},
      </if>
      <if test="memberRelNew != null">
        #{memberRelNew,jdbcType=VARCHAR},
      </if>
      <if test="memberNameNew != null">
        #{memberNameNew,jdbcType=VARCHAR},
      </if>
      <if test="memberDetailNew != null">
        #{memberDetailNew,jdbcType=VARCHAR},
      </if>
      <if test="comments != null">
        #{comments,jdbcType=VARCHAR},
      </if>
      <if test="printError != null">
        #{printError,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dlm.fmp.pojo.CmContentFinalExample" resultType="java.lang.Long">
    select count(*) from cm_content_final
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cm_content_final
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cmContentId != null">
        cm_content_id = #{record.cmContentId,jdbcType=INTEGER},
      </if>
      <if test="record.memberRel != null">
        member_rel = #{record.memberRel,jdbcType=VARCHAR},
      </if>
      <if test="record.fatherName != null">
        father_name = #{record.fatherName,jdbcType=VARCHAR},
      </if>
      <if test="record.spouseName != null">
        spouse_name = #{record.spouseName,jdbcType=VARCHAR},
      </if>
      <if test="record.fatherNamePinyin != null">
        father_name_pinyin = #{record.fatherNamePinyin,jdbcType=VARCHAR},
      </if>
      <if test="record.spouseNamePinyin != null">
        spouse_name_pinyin = #{record.spouseNamePinyin,jdbcType=VARCHAR},
      </if>
      <if test="record.relKeyword != null">
        rel_keyword = #{record.relKeyword,jdbcType=VARCHAR},
      </if>
      <if test="record.memberSurname != null">
        member_surname = #{record.memberSurname,jdbcType=VARCHAR},
      </if>
      <if test="record.memberName != null">
        member_name = #{record.memberName,jdbcType=VARCHAR},
      </if>
      <if test="record.memberNamePinyin != null">
        member_name_pinyin = #{record.memberNamePinyin,jdbcType=VARCHAR},
      </if>
      <if test="record.memberGender != null">
        member_gender = #{record.memberGender,jdbcType=INTEGER},
      </if>
      <if test="record.memberDetail != null">
        member_detail = #{record.memberDetail,jdbcType=VARCHAR},
      </if>
      <if test="record.contentType != null">
        content_type = #{record.contentType,jdbcType=INTEGER},
      </if>
      <if test="record.generationNum != null">
        generation_num = #{record.generationNum,jdbcType=INTEGER},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=INTEGER},
      </if>
      <if test="record.subClanId != null">
        sub_clan_id = #{record.subClanId,jdbcType=INTEGER},
      </if>
      <if test="record.bookId != null">
        book_id = #{record.bookId,jdbcType=INTEGER},
      </if>
      <if test="record.volumeId != null">
        volume_id = #{record.volumeId,jdbcType=INTEGER},
      </if>
      <if test="record.secPersonalName != null">
        sec_personal_name = #{record.secPersonalName,jdbcType=VARCHAR},
      </if>
      <if test="record.generationWord != null">
        generation_word = #{record.generationWord,jdbcType=VARCHAR},
      </if>
      <if test="record.birthdayTime != null">
        birthday_time = #{record.birthdayTime,jdbcType=VARCHAR},
      </if>
      <if test="record.deathdayTime != null">
        deathday_time = #{record.deathdayTime,jdbcType=VARCHAR},
      </if>
      <if test="record.buriedLocation != null">
        buried_location = #{record.buriedLocation,jdbcType=VARCHAR},
      </if>
      <if test="record.son != null">
        son = #{record.son,jdbcType=VARCHAR},
      </if>
      <if test="record.daughter != null">
        daughter = #{record.daughter,jdbcType=VARCHAR},
      </if>
      <if test="record.ranking != null">
        ranking = #{record.ranking,jdbcType=INTEGER},
      </if>
      <if test="record.extendFlag != null">
        extend_flag = #{record.extendFlag,jdbcType=INTEGER},
      </if>
      <if test="record.relFlag != null">
        rel_flag = #{record.relFlag,jdbcType=INTEGER},
      </if>
      <if test="record.parseFlag != null">
        parse_flag = #{record.parseFlag,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.toLocate != null">
        to_locate = #{record.toLocate,jdbcType=INTEGER},
      </if>
      <if test="record.sonNum != null">
        son_num = #{record.sonNum,jdbcType=INTEGER},
      </if>
      <if test="record.sonNumReal != null">
        son_num_real = #{record.sonNumReal,jdbcType=INTEGER},
      </if>
      <if test="record.mark != null">
        mark = #{record.mark,jdbcType=VARCHAR},
      </if>
      <if test="record.relErrorFlag != null">
        rel_error_flag = #{record.relErrorFlag,jdbcType=INTEGER},
      </if>
      <if test="record.sonNumDiff != null">
        son_num_diff = #{record.sonNumDiff,jdbcType=INTEGER},
      </if>
      <if test="record.alreadyExist != null">
        already_exist = #{record.alreadyExist,jdbcType=INTEGER},
      </if>
      <if test="record.brotherNum != null">
        brother_num = #{record.brotherNum,jdbcType=INTEGER},
      </if>
      <if test="record.wifeList != null">
        wife_list = #{record.wifeList,jdbcType=VARCHAR},
      </if>
      <if test="record.connectType != null">
        connect_type = #{record.connectType,jdbcType=INTEGER},
      </if>
      <if test="record.subClanIdOrigin != null">
        sub_clan_id_origin = #{record.subClanIdOrigin,jdbcType=INTEGER},
      </if>
      <if test="record.displayFlag != null">
        display_flag = #{record.displayFlag,jdbcType=INTEGER},
      </if>
      <if test="record.memberRelOriginal != null">
        member_rel_original = #{record.memberRelOriginal,jdbcType=VARCHAR},
      </if>
      <if test="record.memberNameOriginal != null">
        member_name_original = #{record.memberNameOriginal,jdbcType=VARCHAR},
      </if>
      <if test="record.memberDetailOriginal != null">
        member_detail_original = #{record.memberDetailOriginal,jdbcType=VARCHAR},
      </if>
      <if test="record.memberRelNew != null">
        member_rel_new = #{record.memberRelNew,jdbcType=VARCHAR},
      </if>
      <if test="record.memberNameNew != null">
        member_name_new = #{record.memberNameNew,jdbcType=VARCHAR},
      </if>
      <if test="record.memberDetailNew != null">
        member_detail_new = #{record.memberDetailNew,jdbcType=VARCHAR},
      </if>
      <if test="record.comments != null">
        comments = #{record.comments,jdbcType=VARCHAR},
      </if>
      <if test="record.printError != null">
        print_error = #{record.printError,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cm_content_final
    set id = #{record.id,jdbcType=INTEGER},
      cm_content_id = #{record.cmContentId,jdbcType=INTEGER},
      member_rel = #{record.memberRel,jdbcType=VARCHAR},
      father_name = #{record.fatherName,jdbcType=VARCHAR},
      spouse_name = #{record.spouseName,jdbcType=VARCHAR},
      father_name_pinyin = #{record.fatherNamePinyin,jdbcType=VARCHAR},
      spouse_name_pinyin = #{record.spouseNamePinyin,jdbcType=VARCHAR},
      rel_keyword = #{record.relKeyword,jdbcType=VARCHAR},
      member_surname = #{record.memberSurname,jdbcType=VARCHAR},
      member_name = #{record.memberName,jdbcType=VARCHAR},
      member_name_pinyin = #{record.memberNamePinyin,jdbcType=VARCHAR},
      member_gender = #{record.memberGender,jdbcType=INTEGER},
      member_detail = #{record.memberDetail,jdbcType=VARCHAR},
      content_type = #{record.contentType,jdbcType=INTEGER},
      generation_num = #{record.generationNum,jdbcType=INTEGER},
      order_no = #{record.orderNo,jdbcType=INTEGER},
      sub_clan_id = #{record.subClanId,jdbcType=INTEGER},
      book_id = #{record.bookId,jdbcType=INTEGER},
      volume_id = #{record.volumeId,jdbcType=INTEGER},
      sec_personal_name = #{record.secPersonalName,jdbcType=VARCHAR},
      generation_word = #{record.generationWord,jdbcType=VARCHAR},
      birthday_time = #{record.birthdayTime,jdbcType=VARCHAR},
      deathday_time = #{record.deathdayTime,jdbcType=VARCHAR},
      buried_location = #{record.buriedLocation,jdbcType=VARCHAR},
      son = #{record.son,jdbcType=VARCHAR},
      daughter = #{record.daughter,jdbcType=VARCHAR},
      ranking = #{record.ranking,jdbcType=INTEGER},
      extend_flag = #{record.extendFlag,jdbcType=INTEGER},
      rel_flag = #{record.relFlag,jdbcType=INTEGER},
      parse_flag = #{record.parseFlag,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      to_locate = #{record.toLocate,jdbcType=INTEGER},
      son_num = #{record.sonNum,jdbcType=INTEGER},
      son_num_real = #{record.sonNumReal,jdbcType=INTEGER},
      mark = #{record.mark,jdbcType=VARCHAR},
      rel_error_flag = #{record.relErrorFlag,jdbcType=INTEGER},
      son_num_diff = #{record.sonNumDiff,jdbcType=INTEGER},
      already_exist = #{record.alreadyExist,jdbcType=INTEGER},
      brother_num = #{record.brotherNum,jdbcType=INTEGER},
      wife_list = #{record.wifeList,jdbcType=VARCHAR},
      connect_type = #{record.connectType,jdbcType=INTEGER},
      sub_clan_id_origin = #{record.subClanIdOrigin,jdbcType=INTEGER},
      display_flag = #{record.displayFlag,jdbcType=INTEGER},
      member_rel_original = #{record.memberRelOriginal,jdbcType=VARCHAR},
      member_name_original = #{record.memberNameOriginal,jdbcType=VARCHAR},
      member_detail_original = #{record.memberDetailOriginal,jdbcType=VARCHAR},
      member_rel_new = #{record.memberRelNew,jdbcType=VARCHAR},
      member_name_new = #{record.memberNameNew,jdbcType=VARCHAR},
      member_detail_new = #{record.memberDetailNew,jdbcType=VARCHAR},
      comments = #{record.comments,jdbcType=VARCHAR},
      print_error = #{record.printError,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dlm.fmp.pojo.CmContentFinal">
    update cm_content_final
    <set>
      <if test="cmContentId != null">
        cm_content_id = #{cmContentId,jdbcType=INTEGER},
      </if>
      <if test="memberRel != null">
        member_rel = #{memberRel,jdbcType=VARCHAR},
      </if>
      <if test="fatherName != null">
        father_name = #{fatherName,jdbcType=VARCHAR},
      </if>
      <if test="spouseName != null">
        spouse_name = #{spouseName,jdbcType=VARCHAR},
      </if>
      <if test="fatherNamePinyin != null">
        father_name_pinyin = #{fatherNamePinyin,jdbcType=VARCHAR},
      </if>
      <if test="spouseNamePinyin != null">
        spouse_name_pinyin = #{spouseNamePinyin,jdbcType=VARCHAR},
      </if>
      <if test="relKeyword != null">
        rel_keyword = #{relKeyword,jdbcType=VARCHAR},
      </if>
      <if test="memberSurname != null">
        member_surname = #{memberSurname,jdbcType=VARCHAR},
      </if>
      <if test="memberName != null">
        member_name = #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="memberNamePinyin != null">
        member_name_pinyin = #{memberNamePinyin,jdbcType=VARCHAR},
      </if>
      <if test="memberGender != null">
        member_gender = #{memberGender,jdbcType=INTEGER},
      </if>
      <if test="memberDetail != null">
        member_detail = #{memberDetail,jdbcType=VARCHAR},
      </if>
      <if test="contentType != null">
        content_type = #{contentType,jdbcType=INTEGER},
      </if>
      <if test="generationNum != null">
        generation_num = #{generationNum,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=INTEGER},
      </if>
      <if test="subClanId != null">
        sub_clan_id = #{subClanId,jdbcType=INTEGER},
      </if>
      <if test="bookId != null">
        book_id = #{bookId,jdbcType=INTEGER},
      </if>
      <if test="volumeId != null">
        volume_id = #{volumeId,jdbcType=INTEGER},
      </if>
      <if test="secPersonalName != null">
        sec_personal_name = #{secPersonalName,jdbcType=VARCHAR},
      </if>
      <if test="generationWord != null">
        generation_word = #{generationWord,jdbcType=VARCHAR},
      </if>
      <if test="birthdayTime != null">
        birthday_time = #{birthdayTime,jdbcType=VARCHAR},
      </if>
      <if test="deathdayTime != null">
        deathday_time = #{deathdayTime,jdbcType=VARCHAR},
      </if>
      <if test="buriedLocation != null">
        buried_location = #{buriedLocation,jdbcType=VARCHAR},
      </if>
      <if test="son != null">
        son = #{son,jdbcType=VARCHAR},
      </if>
      <if test="daughter != null">
        daughter = #{daughter,jdbcType=VARCHAR},
      </if>
      <if test="ranking != null">
        ranking = #{ranking,jdbcType=INTEGER},
      </if>
      <if test="extendFlag != null">
        extend_flag = #{extendFlag,jdbcType=INTEGER},
      </if>
      <if test="relFlag != null">
        rel_flag = #{relFlag,jdbcType=INTEGER},
      </if>
      <if test="parseFlag != null">
        parse_flag = #{parseFlag,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="toLocate != null">
        to_locate = #{toLocate,jdbcType=INTEGER},
      </if>
      <if test="sonNum != null">
        son_num = #{sonNum,jdbcType=INTEGER},
      </if>
      <if test="sonNumReal != null">
        son_num_real = #{sonNumReal,jdbcType=INTEGER},
      </if>
      <if test="mark != null">
        mark = #{mark,jdbcType=VARCHAR},
      </if>
      <if test="relErrorFlag != null">
        rel_error_flag = #{relErrorFlag,jdbcType=INTEGER},
      </if>
      <if test="sonNumDiff != null">
        son_num_diff = #{sonNumDiff,jdbcType=INTEGER},
      </if>
      <if test="alreadyExist != null">
        already_exist = #{alreadyExist,jdbcType=INTEGER},
      </if>
      <if test="brotherNum != null">
        brother_num = #{brotherNum,jdbcType=INTEGER},
      </if>
      <if test="wifeList != null">
        wife_list = #{wifeList,jdbcType=VARCHAR},
      </if>
      <if test="connectType != null">
        connect_type = #{connectType,jdbcType=INTEGER},
      </if>
      <if test="subClanIdOrigin != null">
        sub_clan_id_origin = #{subClanIdOrigin,jdbcType=INTEGER},
      </if>
      <if test="displayFlag != null">
        display_flag = #{displayFlag,jdbcType=INTEGER},
      </if>
      <if test="memberRelOriginal != null">
        member_rel_original = #{memberRelOriginal,jdbcType=VARCHAR},
      </if>
      <if test="memberNameOriginal != null">
        member_name_original = #{memberNameOriginal,jdbcType=VARCHAR},
      </if>
      <if test="memberDetailOriginal != null">
        member_detail_original = #{memberDetailOriginal,jdbcType=VARCHAR},
      </if>
      <if test="memberRelNew != null">
        member_rel_new = #{memberRelNew,jdbcType=VARCHAR},
      </if>
      <if test="memberNameNew != null">
        member_name_new = #{memberNameNew,jdbcType=VARCHAR},
      </if>
      <if test="memberDetailNew != null">
        member_detail_new = #{memberDetailNew,jdbcType=VARCHAR},
      </if>
      <if test="comments != null">
        comments = #{comments,jdbcType=VARCHAR},
      </if>
      <if test="printError != null">
        print_error = #{printError,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dlm.fmp.pojo.CmContentFinal">
    update cm_content_final
    set cm_content_id = #{cmContentId,jdbcType=INTEGER},
      member_rel = #{memberRel,jdbcType=VARCHAR},
      father_name = #{fatherName,jdbcType=VARCHAR},
      spouse_name = #{spouseName,jdbcType=VARCHAR},
      father_name_pinyin = #{fatherNamePinyin,jdbcType=VARCHAR},
      spouse_name_pinyin = #{spouseNamePinyin,jdbcType=VARCHAR},
      rel_keyword = #{relKeyword,jdbcType=VARCHAR},
      member_surname = #{memberSurname,jdbcType=VARCHAR},
      member_name = #{memberName,jdbcType=VARCHAR},
      member_name_pinyin = #{memberNamePinyin,jdbcType=VARCHAR},
      member_gender = #{memberGender,jdbcType=INTEGER},
      member_detail = #{memberDetail,jdbcType=VARCHAR},
      content_type = #{contentType,jdbcType=INTEGER},
      generation_num = #{generationNum,jdbcType=INTEGER},
      order_no = #{orderNo,jdbcType=INTEGER},
      sub_clan_id = #{subClanId,jdbcType=INTEGER},
      book_id = #{bookId,jdbcType=INTEGER},
      volume_id = #{volumeId,jdbcType=INTEGER},
      sec_personal_name = #{secPersonalName,jdbcType=VARCHAR},
      generation_word = #{generationWord,jdbcType=VARCHAR},
      birthday_time = #{birthdayTime,jdbcType=VARCHAR},
      deathday_time = #{deathdayTime,jdbcType=VARCHAR},
      buried_location = #{buriedLocation,jdbcType=VARCHAR},
      son = #{son,jdbcType=VARCHAR},
      daughter = #{daughter,jdbcType=VARCHAR},
      ranking = #{ranking,jdbcType=INTEGER},
      extend_flag = #{extendFlag,jdbcType=INTEGER},
      rel_flag = #{relFlag,jdbcType=INTEGER},
      parse_flag = #{parseFlag,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      to_locate = #{toLocate,jdbcType=INTEGER},
      son_num = #{sonNum,jdbcType=INTEGER},
      son_num_real = #{sonNumReal,jdbcType=INTEGER},
      mark = #{mark,jdbcType=VARCHAR},
      rel_error_flag = #{relErrorFlag,jdbcType=INTEGER},
      son_num_diff = #{sonNumDiff,jdbcType=INTEGER},
      already_exist = #{alreadyExist,jdbcType=INTEGER},
      brother_num = #{brotherNum,jdbcType=INTEGER},
      wife_list = #{wifeList,jdbcType=VARCHAR},
      connect_type = #{connectType,jdbcType=INTEGER},
      sub_clan_id_origin = #{subClanIdOrigin,jdbcType=INTEGER},
      display_flag = #{displayFlag,jdbcType=INTEGER},
      member_rel_original = #{memberRelOriginal,jdbcType=VARCHAR},
      member_name_original = #{memberNameOriginal,jdbcType=VARCHAR},
      member_detail_original = #{memberDetailOriginal,jdbcType=VARCHAR},
      member_rel_new = #{memberRelNew,jdbcType=VARCHAR},
      member_name_new = #{memberNameNew,jdbcType=VARCHAR},
      member_detail_new = #{memberDetailNew,jdbcType=VARCHAR},
      comments = #{comments,jdbcType=VARCHAR},
      print_error = #{printError,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>